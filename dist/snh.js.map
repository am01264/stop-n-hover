{"version":3,"sources":["snh.js"],"names":["StopNHover","domTarget","oOptions","NodeList","Array","map","dom","sName","hasOwnProperty","_updateDeltas","fnScrollDelegator","_scrollDelegator","bind","window","setTimeout","addEventListener","rectTarget","getBoundingClientRect","deltaTop","top","deltaHeight","height","scrollTop","hover","stop","rClassReplace","RegExp","classStop","sClassNames","className","replace","classHover"],"mappings":";;;;;;;;AAAA;;;;;;;;;IASMA,U;;AAGJ;;;;;;AAMA,sBAAYC,SAAZ,EAAsC;AAAA,QAAfC,QAAe,yDAAJ,EAAI;;AAAA;;AAEpC;AACA,QAAID,qBAAqBE,QAArB,IAAiCF,qBAAqBG,KAA1D,EAAiE;AAC/D,aAAO,6BAAIH,SAAJ,GAAeI,GAAf,CAAmB;AAAA,eAAO,IAAIL,UAAJ,CAAeM,GAAf,EAAoBJ,QAApB,CAAP;AAAA,OAAnB,CAAP;AACD;;AAED,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,QAAL,GAAgB;AACd,mBAAa,UADC;AAEd,oBAAc;AAFA,KAAhB;;AAKA,SAAK,IAAIK,KAAT,IAAkBL,QAAlB,EAA4B;AAC1B,UAAIA,SAASM,cAAT,CAAwBD,KAAxB,CAAJ,EAAoC;AAClC,aAAKL,QAAL,CAAcK,KAAd,IAAuBL,SAASK,KAAT,CAAvB;AACD;AACF;;AAED,SAAKE,aAAL;;AAEA,QAAMC,oBAAoB,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAA1B;AACAC,WAAOC,UAAP,CAAkB,CAAlB,EAAqBJ,iBAArB;AACAG,WAAOE,gBAAP,CAAwB,QAAxB,EAAkCL,iBAAlC;AACD;;AAED;;;;;;;;;oCAKgB;AACd,UAAMM,aAAa,KAAKf,SAAL,CAAegB,qBAAf,EAAnB;AACA,WAAKC,QAAL,GAAgBF,WAAWG,GAA3B;AACA,WAAKC,WAAL,GAAmBJ,WAAWK,MAA9B;AACD;;AAED;;;;;;;uCAImB;AACjB,WAAKZ,aAAL;;AAEA,UAAII,OAAOS,SAAP,GAAoB,KAAKF,WAAL,GAAmB,KAAKF,QAAhD,EAA2D;AACzD,aAAKK,KAAL;AACD,OAFD,MAEO;AACL,aAAKC,IAAL;AACD;AACF;;AAED;;;;;;;4BAIQ;AACN,UAAMvB,YAAY,KAAKA,SAAvB;AACA,UAAMwB,gBAAgB,IAAIC,MAAJ,aAAsB,KAAKxB,QAAL,CAAcyB,SAApC,YAAuD,GAAvD,CAAtB;AACA,UAAMC,cAAc3B,UAAU4B,SAA9B;;AAEA5B,gBAAU4B,SAAV,GAAsBD,YAAYE,OAAZ,CAAoBL,aAApB,EAAmC,IAAnC,WACd,KAAKvB,QAAL,CAAc6B,UADA,CAAtB;AAED;;AAED;;;;;;;2BAIO;AACL,UAAM9B,YAAY,KAAKA,SAAvB;AACA,UAAMwB,gBAAgB,IAAIC,MAAJ,aAAsB,KAAKxB,QAAL,CAAc6B,UAApC,YAAwD,GAAxD,CAAtB;AACA,UAAMH,cAAc3B,UAAU4B,SAA9B;;AAEA5B,gBAAU4B,SAAV,GAAsBD,YAAYE,OAAZ,CAAoBL,aAApB,EAAmC,IAAnC,WACd,KAAKvB,QAAL,CAAcyB,SADA,CAAtB;AAED","file":"snh.js","sourcesContent":["/**\n * Simple toggle function between 2 classes based on scroll-positioning.\n * If the element is in the viewable area, it gets the class `options.classStop` (defaults to `snh-stop`)\n * Otherwise, if it's even a pixel out of view, it gets the class `options.classHover` (defaults to `snh-hover`)\n *\n * Useful for mostly CSS designs that need a hovering menu, that starts fixed to the top.\n *\n * Theoretically compatible back to IE5, although I'm unsure about the JSON type object instanciation.\n */\nclass StopNHover {\n\n\n  /**\n   * Sets up the element with scroll-handlers and initial classes.\n   *\n   * @param {Element|NodeList|Array} domTarget DOM Element(s) to be affected\n   * @param {Object} oOptions                  Key-Value hash of option-names and values\n   */\n  constructor(domTarget, oOptions = {}) {\n\n    // If an array is passed, run this constructor for all of them\n    if (domTarget instanceof NodeList || domTarget instanceof Array) {\n      return [...domTarget].map(dom => new StopNHover(dom, oOptions));\n    }\n\n    this.domTarget = domTarget;\n    this.oOptions = {\n      'classStop': 'snh-stop',\n      'classHover': 'snh-hover'\n    };\n\n    for (var sName in oOptions) {\n      if (oOptions.hasOwnProperty(sName)) {\n        this.oOptions[sName] = oOptions[sName];\n      }\n    }\n\n    this._updateDeltas();\n\n    const fnScrollDelegator = this._scrollDelegator.bind(this);\n    window.setTimeout(0, fnScrollDelegator);\n    window.addEventListener('scroll', fnScrollDelegator);\n  }\n\n  /**\n   * @private\n   * Update the scrolled top of the document & the height of our target element.\n   * Used internally as a convenience function. It does not trigger any further actions.\n   */\n  _updateDeltas() {\n    const rectTarget = this.domTarget.getBoundingClientRect();\n    this.deltaTop = rectTarget.top;\n    this.deltaHeight = rectTarget.height;\n  }\n\n  /**\n   * @private\n   * Launched internally on a scroll event or initial setup. It triggers either [hover]{@link #StopNHover.hover} or [stop]{@link #StopNHover.stop} depending on the scrolled top of the document.\n   */\n  _scrollDelegator() {\n    this._updateDeltas();\n\n    if (window.scrollTop > (this.deltaHeight + this.deltaTop)) {\n      this.hover();\n    } else {\n      this.stop();\n    }\n  }\n\n  /**\n   * Triggers the element to hover.\n   * Removes the `oOptions.classStop` class (default `snh-stop`) and replaces it with `oOptions.classHover` (default `snh-hover`).\n   */\n  hover() {\n    const domTarget = this.domTarget;\n    const rClassReplace = new RegExp(`([^|\\s])${this.oOptions.classStop}[\\s|$]`, 'g');\n    const sClassNames = domTarget.className;\n\n    domTarget.className = sClassNames.replace(rClassReplace, '$1')\n      + ` ${this.oOptions.classHover}`;\n  }\n\n  /**\n   * Triggers the element to stop.\n   * Replace the `oOptions.classHover` class (default `snh-hover`) with the `oOptions.classStop` (default `snh-stop`)\n   */\n  stop() {\n    const domTarget = this.domTarget;\n    const rClassReplace = new RegExp(`([^|\\s])${this.oOptions.classHover}[\\s|$]`, 'g');\n    const sClassNames = domTarget.className;\n\n    domTarget.className = sClassNames.replace(rClassReplace, '$1')\n      + ` ${this.oOptions.classStop}`;\n  }\n\n}\n"],"sourceRoot":"/source/"}